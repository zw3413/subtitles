{"version":3,"sources":["theme/components/styled.tsx","theme/colors.ts","theme/default.ts","theme/index.ts","utils/lowerBound.tsx","utils/doubleDigits.tsx","theme/components/base.tsx","theme/shadow.ts","theme/components/text.tsx","hooks/animation_interval.ts","hooks/timer.ts","components/time_stamp.tsx","theme/components/layout.tsx","theme/components/box.tsx","components/scrub_bar.tsx","theme/components/process_colors.tsx","theme/components/button.tsx","components/current_subtitle.tsx","theme/components/shift_colors.tsx","theme/components/content.tsx","components/subtitle_player.tsx","components/landing_page.tsx","App.tsx","api.ts","index.tsx"],"names":["default","styled","ThemeProvider","useTheme","styledComponents","palette","blue","black","white","dark","darkBlue","lightGray","red","defaultTheme","colors","foreground","background","elementSizes","icon","scrubbar","scrubCursor","content","logo","screenshot","spacings","xxs","xs","s","m","ml","l","xl","xxl","lineHeight","fontSizes","fontWeights","normal","bold","lighter","breakpoints","mobileM","mobileS","getSpacing","theme","spacing","concat","lowerBound","arr","condition","start","end","length","pivot","Math","floor","doubleDigits","t","abs","toString","baseStyle","props","padding","paddingTop","verticalPadding","paddingBottom","paddingLeft","horizontalPadding","paddingRight","margin","marginLeft","horizontalMargin","marginRight","marginTop","verticalMargin","marginBottom","getCssShadow","yOffset","blur","opacity","Text","_props$fontWeight","_props$fontSize","fontWeight","color","fontSize","Monospace","fontFamily","requestAnimationInterval","_props$shadowOffset","_props$shadowSpread","_props$shadowOpacity","textShadow","shadowOffset","shadowSpread","shadowOpacity","callback","id","active","loop","requestAnimationFrame","cancelAnimationFrame","Timer","constructor","t0","arguments","undefined","v","running","stopCallback","observers","Set","this","broadcast","forEach","observer","tStart","Date","now","pause","_this$stopCallback","call","set","observe","add","delete","TimerContext","createContext","TimerProvider","Provider","useTimer","useContext","TimeStamp","memo","timer","seconds","setSeconds","useState","useEffect","_jsx","children","_jsxs","Layout","display","flexDirection","Box","backgroundColor","borderRadius","overflow","ScrubPosition","boxShadow","_ref","max","pos","setPos","style","position","left","top","height","width","ScrubBar","_ref2","_cues$end","_cues","cues","maxT","canvasRef","useRef","draw","useCallback","canvas","offsetWidth","offsetHeight","ctx","getContext","clearRect","scale","fillStyle","c","fillRect","current","mouseListener","event","buttons","rect","getBoundingClientRect","x","clientX","touchListener","touches","min","resizeListener","window","addEventListener","removeEventListener","cursor","ref","processColors","mode","strength","Color","darken","desaturate","lighten","saturate","alpha","ProcessColors","innerTheme","useMemo","hoverColor","colorCode","isDark","string","pressColor","TextButton","attrs","as","_templateObject","_taggedTemplateLiteral","disabled","_templateObject2","CurrentSubtitle","setCurrent","currentCue","text","textAlign","ShiftColors","Content","SubtitlePlayer","subtitles","close","setRunning","speed","setSpeed","adaptive","setAdaptive","fullScreen","setFullScreen","startTime","filter","type","map","data","noSleep","NoSleep","document","enableNoSleep","enable","disable","adaptSpeed","jumpToNext","jumpToPrevious","listener","key","flex","minHeight","justifyContent","_Fragment","alignItems","onClick","MdPause","MdPlayArrow","LandingPage","setSubtitles","zIndex","maxWidth","App","async","searchParams","URLSearchParams","location","search","get","language","url","origin","response","fetch","ok","Error","status","error","console","fetchTextFromURL","parseSync","fetchData","value","rootElement","getElementById","app","React","StrictMode","hasChildNodes","hydrate","render"],"mappings":"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","file":"static/js/main.434155d6.chunk.js","sourcesContent":["import * as styledComponents from \"styled-components\";\r\n\r\nimport { Theme } from \"../\";\r\n\r\nconst {\r\n  default: styled,\r\n  ThemeProvider,\r\n  useTheme,\r\n} = (styledComponents as unknown) as styledComponents.ThemedStyledComponentsModule<Theme>;\r\n\r\nexport { styled, ThemeProvider, useTheme };\r\n","export const palette = {\r\n  blue: \"rgb(98,135,161)\",\r\n  black: \"black\",\r\n  white: \"white\",\r\n  dark: \"#111111\",\r\n  darkBlue: \"#0a6bab\",\r\n  lightGray: \"#CCCCCC\",\r\n  red: \"red\",\r\n};\r\n","import { palette } from \"./colors\";\r\n\r\nexport const defaultTheme = {\r\n  palette,\r\n  colors: {\r\n    foreground: palette.lightGray,\r\n    background: palette.dark,\r\n  },\r\n  elementSizes: {\r\n    icon: 44,\r\n    scrubbar: 30,\r\n    scrubCursor: 2,\r\n    content: 800,\r\n    logo: 150,\r\n    screenshot: 500,\r\n  },\r\n  spacings: {\r\n    xxs: 1,\r\n    xs: 2,\r\n    s: 5,\r\n    m: 10,\r\n    ml: 20,\r\n    l: 50,\r\n    xl: 100,\r\n    xxl: 250,\r\n  },\r\n  lineHeight: 1.5,\r\n  fontSizes: {\r\n    xxs: 10,\r\n    xs: 12,\r\n    s: 14,\r\n    m: 16,\r\n    ml: 20,\r\n    l: 24,\r\n    xl: 32,\r\n    xxl: 48,\r\n  },\r\n  fontWeights: {\r\n    normal: \"normal\",\r\n    bold: \"bold\",\r\n    lighter: \"lighter\",\r\n  } as const,\r\n  breakpoints: {\r\n    mobileM: 750,\r\n    mobileS: 350,\r\n  },\r\n};\r\n","import { defaultTheme } from \"./default\";\r\n\r\nexport type Theme = typeof defaultTheme;\r\n\r\nexport type Spacing = keyof Theme[\"spacings\"];\r\nexport type FontSize = keyof Theme[\"fontSizes\"];\r\nexport type FontWeight = keyof Theme[\"fontWeights\"];\r\nexport type Color = keyof Theme[\"colors\"];\r\nexport type PaletteColor = keyof Theme[\"palette\"];\r\n\r\nexport { defaultTheme };\r\n\r\nexport const getSpacing = (theme: Theme, spacing?: Spacing) =>\r\n  spacing && `${theme.spacings[spacing]}px`;\r\n\r\nexport const getFontSize = (theme: Theme, fontSize?: FontSize) =>\r\n  fontSize && theme.fontSizes[fontSize];\r\n","export function lowerBound<T>(arr: T[], condition: (r: T) => boolean) {\r\n  let start = 0;\r\n  let end = arr.length;\r\n\r\n  while (start < end) {\r\n    let pivot = Math.floor((end + start) / 2);\r\n    if (condition(arr[pivot])) {\r\n      end = pivot;\r\n    } else {\r\n      start = pivot + 1;\r\n    }\r\n  }\r\n\r\n  return start;\r\n}\r\n","export const doubleDigits = (t: number) => {\r\n  return Math.abs(t) < 10 ? `0${t}` : t.toString();\r\n};\r\n","import { getSpacing, Spacing, Theme } from \"..\";\r\n\r\nexport interface BaseProps {\r\n  padding?: Spacing;\r\n  horizontalPadding?: Spacing;\r\n  verticalPadding?: Spacing;\r\n  margin?: Spacing;\r\n  horizontalMargin?: Spacing;\r\n  verticalMargin?: Spacing;\r\n}\r\n\r\nexport const baseStyle = (props: BaseProps & { theme: Theme }) =>\r\n  ({\r\n    padding: getSpacing(props.theme, props.padding),\r\n    paddingTop: getSpacing(props.theme, props.verticalPadding),\r\n    paddingBottom: getSpacing(props.theme, props.verticalPadding),\r\n    paddingLeft: getSpacing(props.theme, props.horizontalPadding),\r\n    paddingRight: getSpacing(props.theme, props.horizontalPadding),\r\n    margin: getSpacing(props.theme, props.margin),\r\n    marginLeft: getSpacing(props.theme, props.horizontalMargin),\r\n    marginRight: getSpacing(props.theme, props.horizontalMargin),\r\n    marginTop: getSpacing(props.theme, props.verticalMargin),\r\n    marginBottom: getSpacing(props.theme, props.verticalMargin),\r\n  } as const);\r\n","import { getSpacing, Spacing, Theme } from \".\";\r\n\r\nexport const getCssShadow = (\r\n  yOffset: Spacing,\r\n  blur: Spacing,\r\n  opacity: number,\r\n  theme: Theme\r\n) => {\r\n  return `rgba(0,0,0,${opacity}) 0px ${getSpacing(theme, yOffset)} ${getSpacing(\r\n    theme,\r\n    blur\r\n  )}`;\r\n};\r\n","import { FontSize, FontWeight, Spacing } from \"..\";\r\nimport { BaseProps, baseStyle } from \"./base\";\r\nimport { styled } from \"./styled\";\r\nimport { getCssShadow } from \"../shadow\";\r\n\r\nexport const Text = styled(\"span\")<\r\n  {\r\n    fontSize?: FontSize;\r\n    fontWeight?: FontWeight;\r\n  } & BaseProps\r\n>((props) => [\r\n  baseStyle(props),\r\n  {\r\n    fontWeight: props.theme.fontWeights[props.fontWeight ?? \"normal\"],\r\n    color: props.theme.colors.foreground,\r\n    fontSize: props.theme.fontSizes[props.fontSize ?? \"m\"],\r\n    lineHeight: props.theme.lineHeight,\r\n  },\r\n]);\r\n\r\nexport const Bold = styled(\"span\")((props) => ({\r\n  fontWeight: props.theme.fontWeights[\"bold\"],\r\n}));\r\n\r\nexport const Monospace = styled(\"span\")((props) => ({\r\n  fontFamily: \"monospace\",\r\n}));\r\n\r\nexport const ShadowedText = styled(Text)<{\r\n  shadowOffset?: Spacing;\r\n  shadowSpread?: Spacing;\r\n  shadowOpacity?: number;\r\n}>((props) => ({\r\n  textShadow: getCssShadow(\r\n    props.shadowOffset ?? \"xs\",\r\n    props.shadowSpread ?? \"xs\",\r\n    props.shadowOpacity ?? 0.5,\r\n    props.theme\r\n  ),\r\n}));\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useEffect } from \"react\";\r\n\r\nexport const requestAnimationInterval = (callback: () => void) => {\r\n  let active = true;\r\n  let id: number;\r\n  const loop = () => {\r\n    if (active) {\r\n      callback();\r\n      id = requestAnimationFrame(loop);\r\n    }\r\n  };\r\n  id = requestAnimationFrame(loop);\r\n  return () => {\r\n    active = false;\r\n    cancelAnimationFrame(id);\r\n  };\r\n};\r\n\r\nexport const useAnimationInterval = (\r\n  callback: () => void,\r\n  dependencies: any[] = []\r\n) => {\r\n  useEffect(() => requestAnimationInterval(callback), [\r\n    callback,\r\n    ...dependencies,\r\n  ]);\r\n};\r\n","import { createContext, useContext } from \"react\";\r\nimport { requestAnimationInterval } from \"./animation_interval\";\r\n\r\ntype Observer = (t: number) => void;\r\n\r\nexport class Timer {\r\n  public t: number;\r\n  public running = false;\r\n\r\n  private stopCallback?: () => void;\r\n  private observers = new Set<Observer>();\r\n\r\n  constructor(public t0 = 0, public v = 1) {\r\n    this.t = t0;\r\n  }\r\n\r\n  broadcast() {\r\n    const t = this.t;\r\n    this.observers.forEach((observer) => observer(t));\r\n  }\r\n\r\n  public start() {\r\n    if (!this.running) {\r\n      this.running = true;\r\n      const tStart = Date.now();\r\n      this.stopCallback = requestAnimationInterval(() => {\r\n        this.t = (Date.now() - tStart) * this.v + this.t0;\r\n        this.broadcast();\r\n      });\r\n    }\r\n  }\r\n\r\n  public pause(broadcast = true) {\r\n    this.stopCallback?.();\r\n    this.stopCallback = undefined;\r\n    this.running = false;\r\n    this.t0 = this.t;\r\n    if (broadcast) {\r\n      this.broadcast();\r\n    }\r\n  }\r\n\r\n  public set(t: number, v = this.v) {\r\n    this.t = t;\r\n    this.v = v;\r\n    if (this.running) {\r\n      this.pause(false);\r\n      this.start();\r\n    } else {\r\n      this.t0 = t;\r\n      this.broadcast();\r\n    }\r\n  }\r\n\r\n  public observe(observer: Observer) {\r\n    this.observers.add(observer);\r\n    return () => {\r\n      this.observers.delete(observer);\r\n    };\r\n  }\r\n}\r\n\r\nconst TimerContext = createContext(new Timer());\r\n\r\nexport const TimerProvider = TimerContext.Provider;\r\nexport const useTimer = () => useContext(TimerContext);\r\n","import React, { memo, useEffect, useState } from \"react\";\r\nimport { doubleDigits } from \"../utils/doubleDigits\";\r\nimport { Monospace, Text } from \"../theme/components/text\";\r\nimport { useTimer } from \"../hooks/timer\";\r\n\r\nexport const TimeStamp = memo(() => {\r\n  const timer = useTimer();\r\n  const [seconds, setSeconds] = useState(timer.t);\r\n\r\n  useEffect(() => {\r\n    return timer.observe((t) => setSeconds(Math.floor(t / 1000)));\r\n  }, [timer]);\r\n\r\n  return (\r\n    <Text fontSize=\"m\">\r\n      <Monospace>\r\n        {doubleDigits(Math.floor(seconds / (60 * 60)))}:\r\n        {doubleDigits(Math.floor((seconds / 60) % 60))}:\r\n        {doubleDigits(Math.floor(seconds % 60))}\r\n      </Monospace>\r\n    </Text>\r\n  );\r\n});\r\n","import { styled } from \"./styled\";\r\nimport { BaseProps, baseStyle } from \"./base\";\r\n\r\nexport const Layout = styled(\"div\")<BaseProps>((props) => ({\r\n  ...baseStyle(props),\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n}));\r\n","import { getSpacing, Spacing } from \"..\";\r\nimport { Layout } from \"./layout\";\r\nimport { styled } from \"./styled\";\r\nimport { getCssShadow } from \"../shadow\";\r\n\r\nexport const Box = styled(Layout)<{\r\n  borderRadius?: Spacing;\r\n}>((props) => ({\r\n  backgroundColor: props.theme.colors.background,\r\n  borderRadius: getSpacing(props.theme, props.borderRadius),\r\n  overflow: \"hidden\",\r\n}));\r\n\r\nexport const ShadowedBox = styled(Box)<{\r\n  shadowOffset?: Spacing;\r\n  shadowSpread?: Spacing;\r\n  shadowOpacity?: number;\r\n}>((props) => ({\r\n  boxShadow: getCssShadow(\r\n    props.shadowOffset ?? \"xs\",\r\n    props.shadowSpread ?? \"xs\",\r\n    props.shadowOpacity ?? 0.5,\r\n    props.theme\r\n  ),\r\n}));\r\n","import React, { useCallback, useEffect, useState, useRef, memo } from \"react\";\r\nimport { Cue } from \"subtitle\";\r\nimport { useTheme } from \"../hooks/theme\";\r\nimport { useTimer } from \"../hooks/timer\";\r\nimport { Box } from \"../theme/components/box\";\r\n\r\nconst ScrubPosition = ({ max }: { max: number }) => {\r\n  const { palette, elementSizes } = useTheme();\r\n  const timer = useTimer();\r\n  const [pos, setPos] = useState(0);\r\n\r\n  useEffect(() => {\r\n    return timer.observe((t) => setPos(t / max));\r\n  }, [timer, max]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        left: `${pos * 100}%`,\r\n        top: 0,\r\n        height: \"100%\",\r\n        width: elementSizes.scrubCursor,\r\n        backgroundColor: palette.red,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const ScrubBar = memo(({ cues }: { cues: Cue[] }) => {\r\n  const { colors, elementSizes } = useTheme();\r\n  const maxT = cues[cues.length - 1]?.end ?? 0;\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const timer = useTimer();\r\n\r\n  const draw = useCallback(\r\n    (canvas: HTMLCanvasElement) => {\r\n      canvas.width = canvas.offsetWidth;\r\n      canvas.height = canvas.offsetHeight;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      if (ctx) {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        const scale = canvas.width / maxT;\r\n        ctx.fillStyle = colors.foreground;\r\n        for (const c of cues) {\r\n          ctx.fillRect(\r\n            c.start * scale,\r\n            0,\r\n            (c.end - c.start) * scale,\r\n            canvas.height\r\n          );\r\n        }\r\n      }\r\n    },\r\n    [cues, colors, maxT]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (canvas) {\r\n      draw(canvas);\r\n\r\n      const mouseListener = (event: MouseEvent) => {\r\n        if (event.buttons === 1) {\r\n          const rect = canvas.getBoundingClientRect();\r\n          const x = (event.clientX - rect.left) / canvas.offsetWidth;\r\n          timer.set(x * maxT);\r\n        }\r\n      };\r\n      const touchListener = (event: TouchEvent) => {\r\n        const rect = canvas.getBoundingClientRect();\r\n        const x = (event.touches[0].clientX - rect.left) / canvas.offsetWidth;\r\n        timer.set(Math.min(Math.max(x, 0), 1) * maxT);\r\n      };\r\n      const resizeListener = () => draw(canvas);\r\n\r\n      window.addEventListener(\"resize\", resizeListener);\r\n      canvas.addEventListener(\"mousemove\", mouseListener);\r\n      canvas.addEventListener(\"mousedown\", mouseListener);\r\n      canvas.addEventListener(\"touchmove\", touchListener);\r\n      canvas.addEventListener(\"touchstart\", touchListener);\r\n      return () => {\r\n        window.removeEventListener(\"resize\", resizeListener);\r\n        canvas.removeEventListener(\"mousemove\", mouseListener);\r\n        canvas.removeEventListener(\"mousedown\", mouseListener);\r\n        canvas.removeEventListener(\"touchstart\", touchListener);\r\n        canvas.removeEventListener(\"touchmove\", touchListener);\r\n      };\r\n    }\r\n  }, [draw, timer, maxT]);\r\n\r\n  return (\r\n    <Box\r\n      borderRadius=\"m\"\r\n      style={{\r\n        position: \"relative\",\r\n        width: \"100%\",\r\n        overflow: \"hidden\",\r\n        cursor: \"pointer\",\r\n        height:\"15px\"\r\n      }}\r\n    >\r\n      <canvas\r\n        height={elementSizes.scrubbar}\r\n        style={{ display: \"block\" }}\r\n        ref={canvasRef}\r\n      />\r\n      <ScrubPosition max={maxT} />\r\n    </Box>\r\n  );\r\n});\r\n","import Color from \"color\";\r\nimport React, { ReactNode, useMemo } from \"react\";\r\n\r\nimport { Theme } from \"..\";\r\nimport { useTheme, ThemeProvider } from \"../../hooks/theme\";\r\n\r\nconst processColors = (\r\n  { foreground, background }: Theme[\"colors\"],\r\n  mode:\r\n    | \"INVERT\"\r\n    | \"DARKEN_BACKGROUND\"\r\n    | \"LIGHTEN_BACKGROUND\"\r\n    | \"NONE\"\r\n    | \"MAKE_TRANSPARENT\",\r\n  strength = 1\r\n): Theme[\"colors\"] => {\r\n  switch (mode) {\r\n    case \"NONE\":\r\n      return { background, foreground };\r\n    case \"INVERT\":\r\n      return { background: foreground, foreground: background };\r\n    case \"DARKEN_BACKGROUND\":\r\n      return {\r\n        foreground,\r\n        background: Color(background)\r\n          .darken(0.25 * strength)\r\n          .desaturate(0.5 * strength)\r\n          .toString(),\r\n      };\r\n    case \"LIGHTEN_BACKGROUND\":\r\n      return {\r\n        foreground,\r\n        background: Color(background)\r\n          .lighten(0.4 * strength)\r\n          .saturate(0.1 * strength)\r\n          .toString(),\r\n      };\r\n    case \"MAKE_TRANSPARENT\":\r\n      return {\r\n        foreground: Color(foreground)\r\n          .alpha(strength * 0.5)\r\n          .toString(),\r\n        background: Color(background)\r\n          .alpha(strength * 0.5)\r\n          .toString(),\r\n      };\r\n  }\r\n};\r\n\r\nexport const ProcessColors = ({\r\n  children,\r\n  mode = \"INVERT\",\r\n  strength = 1,\r\n}: {\r\n  children: ReactNode;\r\n  mode?: Parameters<typeof processColors>[1];\r\n  strength?: Parameters<typeof processColors>[2];\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  const innerTheme = useMemo(\r\n    () => ({\r\n      ...theme,\r\n      colors: processColors(theme.colors, mode, strength),\r\n    }),\r\n    [theme, mode, strength]\r\n  );\r\n\r\n  return <ThemeProvider theme={innerTheme}>{children}</ThemeProvider>;\r\n};\r\n","import { styled } from \"./styled\";\r\nimport { Text } from \"./text\";\r\nimport { getCssShadow } from \"../shadow\";\r\nimport Color from \"color\";\r\nimport { getSpacing } from \"..\";\r\n\r\nconst hoverColor = (colorCode: string) => {\r\n  const color = Color(colorCode);\r\n  if (color.isDark()) {\r\n    return color.lighten(0.1).string();\r\n  } else {\r\n    return color.darken(0.1).string();\r\n  }\r\n};\r\n\r\nconst pressColor = (colorCode: string) => {\r\n  const color = Color(colorCode);\r\n  if (color.isDark()) {\r\n    return color.lighten(0.25).string();\r\n  } else {\r\n    return color.darken(0.25).string();\r\n  }\r\n};\r\n\r\nexport const Button = styled(Text).attrs({ as: \"button\" })<\r\n  React.HTMLProps<HTMLButtonElement> & { disabled?: boolean }\r\n>`\r\n  transition: 0.25s;\r\n  border: none;\r\n  border-radius: ${(props) => getSpacing(props.theme, \"m\")};\r\n  outline-width: 0;\r\n  background-color: ${(props) => props.theme.colors.background};\r\n  opacity: ${(props) => (props.disabled ? 0.5 : 1)};\r\n  pointer-events: ${(props) => (props.disabled ? \"none\" : \"initial\")};\r\n  box-shadow: ${(props) => getCssShadow(\"xxs\", \"xs\", 0.5, props.theme)};\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: ${(props) => hoverColor(props.theme.colors.background)};\r\n  }\r\n  :active {\r\n    transition: 0s;\r\n    background-color: ${(props) => pressColor(props.theme.colors.background)};\r\n  }\r\n`;\r\n\r\nexport const TextButton = styled(Text)<\r\n  React.HTMLProps<HTMLButtonElement> & { disabled?: boolean }\r\n>`\r\n  transition: 0.25s;\r\n  opacity: ${(props) => (props.disabled ? 0.5 : 1)};\r\n  pointer-events: ${(props) => (props.disabled ? \"none\" : \"initial\")};\r\n  :hover {\r\n    cursor: pointer;\r\n    color: ${(props) => hoverColor(props.theme.colors.foreground)};\r\n  }\r\n  :active {\r\n    transition: 0s;\r\n    color: ${(props) => pressColor(props.theme.colors.foreground)};\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Cue } from \"subtitle\";\r\nimport { lowerBound } from \"../utils/lowerBound\";\r\nimport { Text } from \"../theme/components/text\";\r\nimport { useTimer } from \"../hooks/timer\";\r\n\r\nexport const CurrentSubtitle = ({ cues }: { cues: Cue[] }) => {\r\n  const [current, setCurrent] = useState(\"\");\r\n  const timer = useTimer();\r\n\r\n  useEffect(() => {\r\n    return timer.observe((t) => {\r\n      const currentCue = cues[lowerBound(cues, (v) => t < v.end)];\r\n      setCurrent(currentCue && t >= currentCue.start ? currentCue.text : \"\");\r\n    });\r\n  }, [timer, cues]);\r\n\r\n  return (\r\n    <Text style={{ textAlign: \"center\" }} fontSize=\"l\">\r\n      {current}\r\n    </Text>\r\n  );\r\n};\r\n","import React, { ReactNode } from \"react\";\r\n\r\nimport { PaletteColor } from \"..\";\r\nimport { useTheme, ThemeProvider } from \"../../hooks/theme\";\r\n\r\n/**\r\n * Swaps the foreground and background colors or replaces them with the specified values.\r\n */\r\nexport const ShiftColors = ({\r\n  children,\r\n  background,\r\n  foreground,\r\n}: {\r\n  children: ReactNode;\r\n  background?: PaletteColor;\r\n  foreground?: PaletteColor;\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  const innerTheme = {\r\n    ...theme,\r\n    colors: {\r\n      ...theme.colors,\r\n      background: background\r\n        ? theme.palette[background]\r\n        : theme.colors.background,\r\n      foreground: foreground\r\n        ? theme.palette[foreground]\r\n        : theme.colors.foreground,\r\n    },\r\n  };\r\n\r\n  return <ThemeProvider theme={innerTheme}>{children}</ThemeProvider>;\r\n};\r\n","import { Layout } from \"./layout\";\r\nimport { styled } from \"./styled\";\r\n\r\nexport const Content = styled(Layout).attrs({\r\n  verticalMargin: \"m\",\r\n  horizontalMargin: \"m\",\r\n})((props) => ({\r\n  paddingLeft: \"env(safe-area-inset-left)\",\r\n  paddingRight: \"env(safe-area-inset-right)\",\r\n  paddingTop: \"env(safe-area-inset-top)\",\r\n  paddingBottom: \"env(safe-area-inset-bottom)\",\r\n}));\r\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { Cue, Node } from \"subtitle\";\r\nimport { lowerBound } from \"../utils/lowerBound\";\r\nimport { TimeStamp } from \"./time_stamp\";\r\nimport { ScrubBar } from \"./scrub_bar\";\r\nimport { ProcessColors } from \"../theme/components/process_colors\";\r\nimport { Bold, Text } from \"../theme/components/text\";\r\nimport { useTimer } from \"../hooks/timer\";\r\nimport { Layout } from \"../theme/components/layout\";\r\nimport { TextButton } from \"../theme/components/button\";\r\nimport {\r\n  MdFastForward,\r\n  MdFastRewind,\r\n  MdPause,\r\n  MdPlayArrow,\r\n  MdClose,\r\n} from \"react-icons/md\";\r\nimport { CurrentSubtitle } from \"./current_subtitle\";\r\nimport NoSleep from \"nosleep.js\";\r\nimport { AiOutlineFullscreenExit, AiOutlineFullscreen } from \"react-icons/ai\";\r\nimport { ShiftColors } from \"../theme/components/shift_colors\";\r\nimport { SpeedField } from \"./speed_field\";\r\nimport { Box } from \"../theme/components/box\";\r\nimport { Content } from \"../theme/components/content\";\r\n\r\nexport const SubtitlePlayer = ({\r\n  subtitles,\r\n  close,\r\n}: {\r\n  subtitles: Node[];\r\n  close: () => void;\r\n}) => {\r\n  const timer = useTimer();\r\n  const [running, setRunning] = useState(timer.running);\r\n  const [speed, setSpeed] = useState(timer.v);\r\n  const [adaptive, setAdaptive] = useState(false);\r\n  const [fullScreen, setFullScreen] = useState(false);\r\n  const startTime = useRef<[number, number]>();\r\n\r\n  const cues = useMemo(\r\n    () => subtitles.filter((s) => s.type === \"cue\").map((s) => s.data as Cue),\r\n    [subtitles]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const noSleep = new NoSleep();\r\n\r\n    document.addEventListener(\r\n      \"click\",\r\n      function enableNoSleep() {\r\n        document.removeEventListener(\"click\", enableNoSleep, false);\r\n        noSleep.enable();\r\n      },\r\n      false\r\n    );\r\n\r\n    return () => {\r\n      noSleep.disable();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const max = cues[cues.length - 1].end;\r\n\r\n    return timer.observe((t) => {\r\n      setRunning(timer.running);\r\n      setSpeed(timer.v);\r\n      if (timer.running && t >= max) {\r\n        timer.pause();\r\n      }\r\n    });\r\n  }, [timer, cues]);\r\n\r\n  const adaptSpeed = useCallback(() => {\r\n    if (adaptive && running) {\r\n      if (startTime.current) {\r\n        const v =\r\n          (timer.t - startTime.current[1]) /\r\n          (Date.now() - startTime.current[0]);\r\n        if (v > 0) {\r\n          timer.set(timer.t, v);\r\n        }\r\n      } else {\r\n        startTime.current = [Date.now(), timer.t];\r\n      }\r\n    } else {\r\n      startTime.current = undefined;\r\n    }\r\n  }, [adaptive, running, timer]);\r\n\r\n  const resetSpeed = useCallback(() => {\r\n    timer.set(timer.t, 1);\r\n    startTime.current = undefined;\r\n    adaptSpeed();\r\n  }, [adaptSpeed, timer]);\r\n\r\n  useEffect(adaptSpeed, [adaptSpeed]);\r\n\r\n  const jumpToNext = useCallback(() => {\r\n    const t = timer.t;\r\n    const currentCue =\r\n      cues[\r\n        Math.min(\r\n          cues.length - 1,\r\n          lowerBound(cues, (v) => t < v.start)\r\n        )\r\n      ];\r\n    timer.set(currentCue.start);\r\n    adaptSpeed();\r\n  }, [cues, timer, adaptSpeed]);\r\n\r\n  const jumpToPrevious = useCallback(() => {\r\n    const t = timer.t;\r\n    const currentCue =\r\n      cues[Math.max(0, lowerBound(cues, (v) => t < v.end) - 1)];\r\n    timer.set(currentCue.start);\r\n    adaptSpeed();\r\n  }, [cues, timer, adaptSpeed]);\r\n\r\n  useEffect(() => {\r\n    const listener = (event: KeyboardEvent) => {\r\n      switch (event.key) {\r\n        case \"ArrowLeft\":\r\n          jumpToPrevious();\r\n          break;\r\n        case \"ArrowRight\":\r\n          jumpToNext();\r\n          break;\r\n        case \" \":\r\n          if (timer.running) {\r\n            timer.pause();\r\n          } else {\r\n            timer.start();\r\n          }\r\n          break;\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", listener);\r\n    return () => document.removeEventListener(\"keydown\", listener);\r\n  }, [jumpToNext, jumpToPrevious, timer]);\r\n\r\n  return (\r\n    <ShiftColors background={fullScreen ? \"black\" : undefined}>\r\n      <Box style={{ flex: 1 }}>\r\n        <Content style={{ flex: 1 }}>\r\n          <Layout\r\n            style={{ flex: 1, minHeight: fullScreen ? \"100vh\" : undefined }}\r\n          >\r\n            {/* {fullScreen ? (\r\n              <TextButton\r\n                style={{ alignSelf: \"flex-end\" }}\r\n                onClick={() => setFullScreen(false)}\r\n                fontSize=\"xl\"\r\n              >\r\n                <AiOutlineFullscreenExit />\r\n              </TextButton>\r\n            ) : (\r\n              <Layout\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <TextButton onClick={close} fontSize=\"xl\">\r\n                  <MdClose />\r\n                </TextButton>\r\n\r\n                <TextButton onClick={jumpToPrevious} fontSize=\"xl\">\r\n                  <MdFastRewind />\r\n                </TextButton>\r\n\r\n                <TextButton\r\n                  onClick={() =>\r\n                    timer.running ? timer.pause() : timer.start()\r\n                  }\r\n                  fontSize=\"xl\"\r\n                >\r\n                  {running ? <MdPause /> : <MdPlayArrow />}\r\n                </TextButton>\r\n\r\n                <TextButton onClick={jumpToNext} fontSize=\"xl\">\r\n                  <MdFastForward />\r\n                </TextButton>\r\n\r\n                <TextButton\r\n                  onClick={() => {\r\n                    setFullScreen(true);\r\n                  }}\r\n                  fontSize=\"xl\"\r\n                >\r\n                  <AiOutlineFullscreen />\r\n                </TextButton>\r\n              </Layout>\r\n            )} */}\r\n\r\n            <ShiftColors foreground=\"white\">\r\n              <Layout style={{ flex: 1, justifyContent: \"center\" }}>\r\n                <CurrentSubtitle cues={cues} />\r\n              </Layout>\r\n            </ShiftColors>\r\n\r\n            {!fullScreen && (\r\n              <>\r\n                <Layout\r\n                  verticalMargin=\"xxs\"\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                 \r\n                  <Layout\r\n                    style={{ flexDirection: \"row\", alignItems: \"center\", height :\"24px\" }}\r\n                  >\r\n                     \r\n                    <TextButton\r\n                    onClick={() =>\r\n                      timer.running ? timer.pause() : timer.start()\r\n                    }\r\n                    fontSize=\"m\"\r\n                  >\r\n                    {running ? <MdPause /> : <MdPlayArrow />}\r\n                  </TextButton>\r\n\r\n               \r\n                    {/* <Text>\r\n                      Speed: <SpeedField speed={speed} />\r\n                    </Text>\r\n                    <TextButton\r\n                      title=\"Once activated, the speed will automatically be adjusted to match the current subtitle.\"\r\n                      horizontalMargin=\"m\"\r\n                      onClick={() => setAdaptive(!adaptive)}\r\n                      style={{\r\n                        textDecoration: adaptive ? undefined : \"line-through\",\r\n                      }}\r\n                      fontSize=\"s\"\r\n                      fontWeight={adaptive ? \"bold\" : undefined}\r\n                    >\r\n                      Adaptive\r\n                    </TextButton>\r\n                    <TextButton\r\n                      title=\"Sets the speed to 1\"\r\n                      onClick={resetSpeed}\r\n                      fontSize=\"s\"\r\n                    >\r\n                      <Bold>Reset</Bold>\r\n                    </TextButton> */}\r\n                  </Layout>\r\n                  <TimeStamp />\r\n                </Layout>\r\n\r\n              \r\n\r\n                  <ProcessColors mode=\"DARKEN_BACKGROUND\">\r\n                    <ScrubBar  cues={cues} />\r\n                  </ProcessColors>\r\n \r\n\r\n              \r\n              </>\r\n            )}\r\n          </Layout>\r\n        </Content>\r\n      </Box>\r\n    </ShiftColors>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Node } from \"subtitle\";\r\nimport { SubtitleDropzone } from \"./subtitle_dropzone\";\r\nimport { Bold, Text } from \"../theme/components/text\";\r\nimport { Layout } from \"../theme/components/layout\";\r\nimport { Link } from \"../theme/components/link\";\r\nimport { Box } from \"../theme/components/box\";\r\nimport { Content } from \"../theme/components/content\";\r\nimport Logo from \"../images/resources/export/icon.svg\";\r\nimport { useTheme } from \"../hooks/theme\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\nimport { TextButton } from \"../theme/components/button\";\r\nimport screenshot from \"../images/screenshot.png\";\r\n\r\nexport const LandingPage = ({\r\n  setSubtitles,\r\n}: {\r\n  setSubtitles: (subs: Node[]) => void;\r\n}) => {\r\n  const { elementSizes } = useTheme();\r\n\r\n  return (\r\n    <Box style={{ flex: 1, alignItems: \"center\" }}>\r\n      <Content style={{ flex: 1, zIndex: 1, maxWidth: elementSizes.content }}>\r\n        <Layout\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: \"space-around\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Layout margin=\"l\" style={{ width: \"100%\", alignItems: \"center\" }}>\r\n            {/* <img width={elementSizes.logo} alt=\"project logo\" src={Logo} /> */}\r\n            <Text style={{ textAlign: \"center\" }} padding=\"ml\" fontSize=\"xl\">\r\n              SubttileX\r\n            </Text>\r\n            <Text style={{ textAlign: \"center\" }} fontSize=\"ml\">\r\n              Error to load the subtitle, please feedback the issue.\r\n            </Text>\r\n          </Layout>\r\n          {/* <Layout margin=\"ml\">\r\n            <SubtitleDropzone onLoad={setSubtitles} />\r\n          </Layout>\r\n          <Text margin=\"m\" style={{ textAlign: \"center\" }} fontSize=\"m\">\r\n            Using Substitute, you can watch subtitles from an external device,\r\n            such as a smartphone or tablet. This is useful for the rare\r\n            situations where you don't have control over the video source, or\r\n            want to easily adjust subtitle timings without interrupting the\r\n            movie.\r\n          </Text>\r\n          <Layout horizontalMargin=\"m\" verticalMargin=\"l\">\r\n            <img\r\n              src={screenshot}\r\n              alt=\"Screenshot of a mobile device using Substitute\"\r\n              style={{\r\n                maxWidth: elementSizes.screenshot,\r\n                width: \"100%\",\r\n                objectFit: \"contain\",\r\n              }}\r\n            />\r\n          </Layout>\r\n          <Layout style={{ alignItems: \"center\" }}>\r\n            <Text fontSize=\"ml\">\r\n              <Bold>Usage</Bold>\r\n            </Text>\r\n            <Text verticalMargin=\"m\">\r\n              <ol>\r\n                <li>\r\n                  Select a subtitle file (e.g. from{\" \"}\r\n                  <Link href=\"https://www.opensubtitles.org\">\r\n                    OpenSubtitles.org\r\n                  </Link>\r\n                  )\r\n                </li>\r\n                <li>\r\n                  Use the controls to synchronize the current subtitles with the\r\n                  movie\r\n                </li>\r\n                <li>\r\n                  If necessary, adjust the speed by changing the value or\r\n                  choosing adaptive speed to synchronize with your changes\r\n                </li>\r\n              </ol>\r\n            </Text>\r\n          </Layout>\r\n          <TextButton as=\"a\" href=\"https://github.com/thelartians/substitute\">\r\n            <FaGithub size={elementSizes.icon} />\r\n          </TextButton> */}\r\n        </Layout>\r\n      </Content>\r\n    </Box>\r\n  );\r\n};\r\n","import React, { useMemo, useState, useEffect  } from \"react\";\r\nimport { Node } from \"subtitle\";\r\nimport { ThemeProvider } from \"./hooks/theme\";\r\nimport { defaultTheme } from \"./theme\";\r\nimport { SubtitlePlayer } from \"./components/subtitle_player\";\r\nimport { TimerProvider, Timer } from \"./hooks/timer\";\r\nimport { LandingPage } from \"./components/landing_page\";\r\nimport { parseSync } from \"subtitle\";\r\nimport { fetchTextFromURL } from './api';\r\n\r\nfunction App() {\r\n  const [subtitles, setSubtitles] = useState<Node[]>();\r\n\r\n  // use a new timer instance for every subtitle file\r\n  const timer = useMemo(() => {\r\n    return subtitles ? new Timer() : undefined;\r\n  }, [subtitles]);\r\n\r\n  //read subtitle from url\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        //const url = 'https://gist.githubusercontent.com/samdutton/ca37f3adaf4e23679957b8083e061177/raw/e19399fbccbc069a2af4266e5120ae6bad62699a/sample.vtt';\r\n      \r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        // Get a specific parameter value\r\n        const id = searchParams.get('id');\r\n        const language = searchParams.get('language');\r\n        const serverAddress = window.location.origin\r\n        var url = serverAddress+'/get_subtitle?id='+id+'&language='+language\r\n  //url = 'http://192.168.1.202:12801/get_subtitle?id=61&language=jpn'\r\n        const text = await fetchTextFromURL(url);\r\n        setSubtitles(parseSync(text))\r\n      } catch (error) {\r\n        // Handle error\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={defaultTheme}>\r\n      {subtitles ? (\r\n        <TimerProvider value={timer!}>\r\n          <SubtitlePlayer\r\n            close={() => setSubtitles(undefined)}\r\n            subtitles={subtitles}\r\n          />\r\n        </TimerProvider>\r\n      ) : (\r\n        <LandingPage setSubtitles={setSubtitles} />\r\n      )}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// api.ts\r\nexport const fetchTextFromURL = async (url: string): Promise<string> => {\r\n    try {\r\n      const response = await fetch(url);\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n  \r\n      const text = await response.text();\r\n      return text;\r\n    } catch (error) {\r\n      console.error('Error fetching text:', error);\r\n      throw error;\r\n    }\r\n  };\r\n  ","import React from \"react\";\r\nimport { hydrate, render } from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nconst app = (\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\nif (rootElement!.hasChildNodes()) {\r\n  hydrate(app, rootElement);\r\n} else {\r\n  render(app, rootElement);\r\n}\r\n\r\n// import reportWebVitals from \"./reportWebVitals\";\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}